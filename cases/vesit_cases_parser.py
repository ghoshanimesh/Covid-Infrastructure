# -*- coding: utf-8 -*-
"""Vesit Cases Parser.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s9evqG2urAgA5LvEfAQ8Xh26w2yM3-kG
"""

# import pandas as pd
# import random 
# test_list = ["Mumbai", "Thane", "Pune"]
 
# df = pd.read_excel ('cases.xlsx')
# df["district"].fillna(random.choice(test_list), inplace = True)
 
# # for row in df.iterrows():
# #   if pd.isna(row[1].district):
# #     print(row[1])
 
# df.to_excel('casesupdated.xlsx', index = False, header=True)

import pandas as pd
import random 
from datetime import date 
from datetime import timedelta

#cloumn needed from dataset
df_final = pd.DataFrame(columns=['case_date', 'status', 'district'])
gender_list = ['M', 'F']

#not needed of loop
for x in range(1):
  #the data no we need to read
  df = pd.read_csv("raw_data" +str(x+5)+ ".csv")
  print("-----------raw_data" +str(x+5)+ ".csv---------------")
  #converting all to lower
  df.columns = df.columns.str.lower()
  #extracting data
  df = df[['date announced', 'detected district', 'detected state','current status', 'num cases']]
  # print(df.columns)
  # data cleaning where state is maharashtra and district is eith mumbai, thane or pune
  df = df.loc[df['detected state'] == 'Maharashtra']
  df = df.loc[(df['detected district'] == 'Mumbai') | (df['detected district'] == 'Thane') | (df['detected district'] == 'Pune')]
  df['num cases'] = df['num cases'].astype('int64')
  # print(df)
  for j,row in df.iterrows():
    # print(row['num cases'])
    for i in range(row['num cases']):
      case_date = row['date announced']
      x = date.today() - timedelta(days = 1)
      x = x.strftime("%d/%m/%Y")
      #if case if of yesteray then only add
      #if x == case_date:
      z = input()
      if z >= x:
      # age = random.randrange(3, 75)
      # gender = random.choice(gender_list)
        status = row['current status']
        district = row['detected district']
        df_tobeadded = pd.DataFrame({"case_date": case_date, "status":status, "district" : district}, index=[0])
        df_final = df_final.append(df_tobeadded, ignore_index = True)

#adding all the data to csv
df_final.to_csv('Final_Cases_Without_Age_Gender.csv', index = False,mode='a', header= False)

from datetime import date 
from datetime import timedelta

x = date.today() - timedelta(days = 1)
x = x.strftime("%d/%m/%Y")
print(x)

print(z >= x)